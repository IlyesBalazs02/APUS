// <auto-generated />
using System;
using APUS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APUS.Server.Migrations
{
    [DbContext(typeof(ActivityDbContext))]
    [Migration("20250413155242_TimeSpanNull")]
    partial class TimeSpanNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APUS.Server.Models.Activities.MainActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvgHeartRate")
                        .HasColumnType("int");

                    b.Property<int>("Calpories")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<int>("MaxHeartRate")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainActivities", "Activities");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Bouldering", b =>
                {
                    b.HasBaseType("APUS.Server.Models.Activities.MainActivity");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("RedPoint")
                        .HasColumnType("bit");

                    b.ToTable("Bouldering", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Hiking", b =>
                {
                    b.HasBaseType("APUS.Server.Models.Activities.MainActivity");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("Elevation")
                        .HasColumnType("int");

                    b.ToTable("Hiking", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Running", b =>
                {
                    b.HasBaseType("APUS.Server.Models.Activities.MainActivity");

                    b.Property<int>("Distance")
                        .HasColumnType("int");

                    b.Property<int>("Pace")
                        .HasColumnType("int");

                    b.ToTable("Running", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Bouldering", b =>
                {
                    b.HasOne("APUS.Server.Models.Activities.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Activities.Bouldering", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Hiking", b =>
                {
                    b.HasOne("APUS.Server.Models.Activities.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Activities.Hiking", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APUS.Server.Models.Activities.Running", b =>
                {
                    b.HasOne("APUS.Server.Models.Activities.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Activities.Running", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
