// <auto-generated />
using System;
using APUS.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APUS.Server.Migrations
{
    [DbContext(typeof(ActivityDbContext))]
    [Migration("20250428160455_collections")]
    partial class collections
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APUS.Server.Models.ActivityImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MainActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MainActivityId");

                    b.ToTable("ActivityImages");
                });

            modelBuilder.Entity("APUS.Server.Models.Coordinate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Altitude")
                        .HasColumnType("float");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("MainActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MainActivityId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MainActivityId");

                    b.HasIndex("MainActivityId1");

                    b.ToTable("Coordinates");
                });

            modelBuilder.Entity("APUS.Server.Models.MainActivity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AvgHeartRate")
                        .HasColumnType("int");

                    b.Property<int?>("Calories")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<int?>("MaxHeartRate")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowCoordinates")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainActivities", "Activities");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("APUS.Server.Models.Bouldering", b =>
                {
                    b.HasBaseType("APUS.Server.Models.MainActivity");

                    b.Property<int?>("Difficulty")
                        .HasColumnType("int");

                    b.ToTable("Bouldering", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.Hiking", b =>
                {
                    b.HasBaseType("APUS.Server.Models.MainActivity");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<int?>("ElevationGain")
                        .HasColumnType("int");

                    b.ToTable("Hiking", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.Running", b =>
                {
                    b.HasBaseType("APUS.Server.Models.MainActivity");

                    b.Property<int?>("Distance")
                        .HasColumnType("int");

                    b.Property<int?>("ElevationGain")
                        .HasColumnType("int");

                    b.Property<int?>("Pace")
                        .HasColumnType("int");

                    b.ToTable("Running", "Activities");
                });

            modelBuilder.Entity("APUS.Server.Models.ActivityImage", b =>
                {
                    b.HasOne("APUS.Server.Models.MainActivity", "MainActivity")
                        .WithMany("ActivityImages")
                        .HasForeignKey("MainActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainActivity");
                });

            modelBuilder.Entity("APUS.Server.Models.Coordinate", b =>
                {
                    b.HasOne("APUS.Server.Models.MainActivity", null)
                        .WithMany("Coordinates")
                        .HasForeignKey("MainActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APUS.Server.Models.MainActivity", "MainActivity")
                        .WithMany()
                        .HasForeignKey("MainActivityId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MainActivity");
                });

            modelBuilder.Entity("APUS.Server.Models.Bouldering", b =>
                {
                    b.HasOne("APUS.Server.Models.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Bouldering", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APUS.Server.Models.Hiking", b =>
                {
                    b.HasOne("APUS.Server.Models.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Hiking", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APUS.Server.Models.Running", b =>
                {
                    b.HasOne("APUS.Server.Models.MainActivity", null)
                        .WithOne()
                        .HasForeignKey("APUS.Server.Models.Running", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APUS.Server.Models.MainActivity", b =>
                {
                    b.Navigation("ActivityImages");

                    b.Navigation("Coordinates");
                });
#pragma warning restore 612, 618
        }
    }
}
